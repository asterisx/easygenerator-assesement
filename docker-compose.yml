services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    working_dir: /app
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
    env_file:
      - .env.frontend
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json
          target: /app/package.json

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nestjs_backend
    ports:
      - "${BACKEND_PORT}:3000"
    depends_on:
      - mongodb
    env_file:
      - .env
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./backend/package.json
          target: /app/package.json

  mongodb:
    image: mongo:latest
    container_name: ${MONGO_DB_SERVICE_NAME}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_APP_DB_NAME}
      - MONGO_APP_USERNAME=${MONGO_APP_USERNAME}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD}
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
